[project]
name = "shortmovie-draft-generator2"
version = "0.1.0"
description = "ショート動画設計図生成プロジェクト"
authors = [{ name = "Your Name", email = "your.email@example.com" }]
requires-python = ">=3.10"
readme = "README.md"
dependencies = [
    "openai>=1.0.0,<2",
    "python-dotenv>=1.0.0,<2",
    "click>=8.0.0,<9",
    "ffmpeg-python>=0.2.0,<0.3",
    "requests>=2.31.0,<3",
    "google-auth>=2.23.0,<3",
    "google-auth-oauthlib>=1.1.0,<2",
    "google-auth-httplib2>=0.2.0,<0.3",
    "google-api-python-client>=2.100.0,<3",
]

[project.scripts]
shortmovie-draft-generator = "src.main:main"

[dependency-groups]
dev = [
    "mypy>=1.0.0,<2",
    "pytest>=7.0.0,<8",
    "pytest-cov>=4.0.0,<5",
    "types-requests>=2.32.4.20250611,<3",
    "ruff>=0.12.3",
]

[tool.hatch.build.targets.sdist]
include = ["src"]

[tool.hatch.build.targets.wheel]
include = ["src"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
module = [
    "ffmpeg",
    "ffmpeg.*",
    "googleapiclient",
    "googleapiclient.*",
    "google.auth.*",
    "google.oauth2.*"
]
ignore_missing_imports = true

[tool.ruff]
line-length = 160
target-version = "py313"

[tool.ruff.lint]
select = [
    "E",      # pycodestyle errors
    "W",      # pycodestyle warnings
    "F",      # pyflakes
    "I",      # isort
    "N",      # pep8-naming
    "D",      # pydocstyle
    "UP",     # pyupgrade
    "YTT",    # flake8-2020
    "ASYNC",  # flake8-async
    "S",      # flake8-bandit
    "B",      # flake8-bugbear
    "COM",    # flake8-commas
    "C4",     # flake8-comprehensions
    "DTZ",    # flake8-datetimez
    "T10",    # flake8-debugger
    "EXE",    # flake8-executable
    "ISC",    # flake8-implicit-str-concat
    "ICN",    # flake8-import-conventions
    "G010",   # flake8-logging-format
    "T20",    # flake8-print
    "PIE",    # flake8-pie
    "RSE",    # flake8-raise
    "SIM",    # flake8-simplify
    "SLOT",   # flake8-slots
    "INT",    # flake8-gettext
    "PD",     # pandas-vet
    "PL",     # Pylint
    "NPY",    # NumPy-specific rules
    "PT",     # flake8-pytest-style
    "RUF",    # Ruff-specific rules
    "FURB",   # refurb
    "PGH",    # pygrep-hooks
]
ignore = [
    "E203",
    "S101",
    "D104",
    "D107",
    "D203",
    "D213",
    "D400",
    "D401",
    "D415",
    "T201",  # print
    "S108",  # /tmp
    "COM812",
    "PLR2004",
    "RUF001",
    "RUF002",
    "RUF003",
    "RUF005",
    "PT011",
    "PLR0912",
    "PLR0913",
    "PLR0915",
    "PT006",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=src --cov-report=html --cov-report=term-missing"
